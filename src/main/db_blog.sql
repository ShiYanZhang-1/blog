/*
 Navicat Premium Data Transfer

 Source Server         : 本机
 Source Server Type    : MySQL
 Source Server Version : 80019
 Source Host           : localhost:3306
 Source Schema         : db_blog

 Target Server Type    : MySQL
 Target Server Version : 80019
 File Encoding         : 65001

 Date: 26/04/2020 21:05:00
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for t_blog
-- ----------------------------
DROP TABLE IF EXISTS `t_blog`;
CREATE TABLE `t_blog` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '博客编号',
  `title` varchar(200) DEFAULT NULL COMMENT '博客标题',
  `summary` varchar(400) DEFAULT NULL COMMENT '博客摘要信息',
  `releaseDate` datetime DEFAULT NULL COMMENT '博客发布时间',
  `clickHit` int DEFAULT NULL COMMENT '点击阅读量',
  `replyHit` int DEFAULT NULL COMMENT '评论数量',
  `content` text COMMENT '博客内容',
  `typeId` int DEFAULT NULL COMMENT '博客所属分类',
  `keyWord` varchar(200) DEFAULT NULL COMMENT '关键词',
  PRIMARY KEY (`id`),
  KEY `typeId` (`typeId`),
  CONSTRAINT `t_blog_ibfk_1` FOREIGN KEY (`typeId`) REFERENCES `t_blogtype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=104 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blog
-- ----------------------------
BEGIN;
INSERT INTO `t_blog` VALUES (39, 'Java HelloWorld实现', ' 第一个博客，当然从HelloWorld 开发，主要测试下 百度ueditor的代码高亮效果如何。下面上代码：package com.java1234.demo;/** * 测试 * @author Administrator * */public class HelloWorld {	public stat', '2016-02-02 10:00:42', 304, 18, '<p><img src=\"http://img.baidu.com/hi/jx2/j_0013.gif\"/> 第一个博客，当然从HelloWorld 开发，主要测试下 百度ueditor的代码高亮效果如何。</p><p><br/></p><p>下面上代码：</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.demo;\n\n/**\n&nbsp;*&nbsp;测试\n&nbsp;*&nbsp;@author&nbsp;Administrator\n&nbsp;*\n&nbsp;*/\npublic&nbsp;class&nbsp;HelloWorld&nbsp;{\n\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\n		System.out.println(&quot;Hello&nbsp;World，屌炸天！&quot;);\n	}\n}</pre><p><br/></p><p>代码高亮还算凑合，如果加上 复制代码功能，会更好点；</p><p><br/></p><p>运行效果如下：</p><p><img src=\"/static/userImages/20160202/1454378386640040323.jpg\" title=\"1454378386640040323.jpg\" alt=\"QQ鎴浘20160202095931.jpg\"/></p><p><br/></p><p><br/></p><p>这个图我是直接用百度ueditor直接截图的，很方便。这个是我选用百度ueditor在线编辑器的一个重要原因。</p><p><br/></p><p><br/></p>', 1, 'java');
INSERT INTO `t_blog` VALUES (40, '大学必须掌握的软件基础课程', ' 大学软件专业有很多课程，有些学生搞不清哪些是重点，以下是笔者根据多年经验，认真很重要的课程罗列下：1，C语言  很重要，作为学编程的入门语言，也是众多流行编程语言之父。2，数据结构和算法很重要，以后深入理解一些东西有帮助，即使是Java把很多数据结构都进行了封装，但是学习本课程，可以对性能有深入理解；3，计', '2016-02-02 12:41:52', 338, 9, '<p><img src=\"http://img.baidu.com/hi/jx2/j_0013.gif\"/>&nbsp;大学软件专业有很多课程，有些学生搞不清哪些是重点，以下是笔者根据多年经验，认真很重要的课程罗列下：</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>1，C语言 &nbsp;</strong></span></p><p>很重要，作为学编程的入门语言，也是众多流行编程语言之父。</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>2，数据结构和算法</strong></span></p><p>很重要，以后深入理解一些东西有帮助，即使是Java把很多数据结构都进行了封装，但是学习本课程，可以对性能有深入理解；</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>3，计算机组成原理</strong></span></p><p>一般，学习一下；</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>4，编译原理</strong></span></p><p>一般，学习一下；</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>5，数据库原理</strong></span></p><p>很重要，对以后系统的数据库设计有帮助，站的层次高；</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>6，操作系统原理</strong></span></p><p>很重要，对以后技术提供，和层次有帮助；</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>7，计算机网络</strong></span></p><p>一般，学习一下；</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>8，软件工程</strong></span></p><p>非常重要，对整个软件开发体系的熟悉，直接可以影响到一个技术人员的职业生涯；</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong>9，计算机英语</strong></span></p><p>非常重要，有一些屌丝不重视，这个真的很重要，以后学习一些新技术的时候，有时候中文资源比较少，这时候学习，基本是直接看官方英文文档，假如英语不行，会很苦逼；</p><p><br/></p><p><strong><span style=\"color: rgb(255, 0, 0);\">10，英语</span></strong></p><p>非常重要，这个和上面的计算机英语有区别，计算机英语主要是一些专业词汇的中文专业翻译；而英语的话，是更加广泛的概念，最少要达到4级，最好6级。大学时候通读基本英文技术书籍，我推荐 Head First系列，以及Thining in Java；</p><p><br/></p><p>以上是我认为比较重要的10个课程。大家可以参考下。。可以有遗漏，大家可以评论留言。讨论交流。</p><p><br/></p><p><span style=\"color: rgb(255, 0, 0);\"><strong><br/></strong></span></p>', 4, '大学');
INSERT INTO `t_blog` VALUES (41, '大学里应该掌握的两个能力', '  根据我的经验，我总结了下，大学里掌握以下两种，毕业的时候，用人单位比较喜欢；第一种能力，自学能力；所谓自学能力，顾名思义，就是自我学习知识，技术的能力，这种能力，人与人之间的差距有大，就像有的人毕业能拿13K，有的人只能拿3K；这种能力如何培养呢？根据我的经验，没有捷径，就是多读书，多思考，多实践，还有就', '2016-02-02 13:14:53', 322, 8, '<p><img src=\"http://img.baidu.com/hi/jx2/j_0003.gif\"/> &nbsp;根据我的经验，我总结了下，大学里掌握以下两种，毕业的时候，用人单位比较喜欢；</p><p><br/></p><p><strong><span style=\"color: rgb(255, 0, 0);\">第一种能力，自学能力；</span></strong></p><p>所谓自学能力，顾名思义，就是自我学习知识，技术的能力，这种能力，人与人之间的差距有大，就像有的人毕业能拿13K，有的人只能拿3K；</p><p>这种能力如何培养呢？</p><p>根据我的经验，没有捷径，就是多读书，多思考，多实践，还有就是稍微多做点笔记，多总结；</p><p>很多人自学能力差，大多数原因不是笨，是读书少，见识少。读书少，基础差，想学点新东西都吃力，底子问题；</p><p>学习方法方面，我有些心得；</p><p>有些二货拿到书，直接从头读到尾，而且不允许自己有遗漏，这个是一种效率很底下的学习方法；</p><p>我的建议如下：</p><p>第一：拿到一本书，先自己想想，是不是自己需要的书，网上多查查，这本书好不好，书的人写的，作者有牛逼的，也有比较渣；</p><p>第二：决定看一本书的时候，一定要先看目录大纲，把目录好好看看，这本书讲啥，章节的划分；然后脑海里有大体映像之后，再看具体章节；说简单点，就是先总后分；</p><p>第三：学习的时候，一定要做笔记，写总结；这样才会有提高；最好是写到自己的博客里；</p><p><br/></p><p><br/></p><p><strong><span style=\"color: rgb(255, 0, 0);\">第二种能力，分析问题和解决问题的能力；</span></strong></p><p>第二种能力，很关键，尤其是搞开发的人，这种能力直接关系到自己的前途；</p><p>比如组长或者项目经理给你一个需求，让你开发出来，我举个具体的例子，组长让你开发一个功能，从数据库取数据库，生成word，并且导出；</p><p>有些人一看这功能，顿时晕了，自己没搞过，老师没教过。无从下手。顿时感觉人生好迷茫；</p><p>这时候就是体现一个人分析问题和解决问题的能力了；</p><p>正常分析过程是这样的，首先是查询数据，然后生成一个word，页面请求，返回word文件流；这里涉及到生成word，可以通过百度关键字 java生成word；</p><p>可以看到有很多的技术方案，这时候，你再百度具体的方案的比较，当然也可以论坛，群里交流。比如velocity freemarker；找到方案后，就是学习这个技术，</p><p>这个就是上面的自学能力的体现，如何快速入门掌握，当然，这种简单的技术，直接搞点demo，运行下，很容易上手；不需要看书；</p><p>如何这种培养能力呢？</p><p>没有捷径，就是要多读书，多学习，多思考，以及最重要，多实践，多搞点小项目，搞的时候会遇到很多问题，设计问题，调试问题，技术方案问题等等；</p><p>遇到问题，解决问题。能力就是这样慢慢提高的。不是什么一下子就变成大神，除非你在做梦；<br/></p><p><br/></p><p><img src=\"http://img.baidu.com/hi/jx2/j_0013.gif\"/>加油吧。骚年们！</p><p><br/></p>', 4, '大学');
INSERT INTO `t_blog` VALUES (42, 'Mysql中文乱码问题解决', '有些学员经常遇到 项目jdbc获取数据库数据，中文乱码；这里给出一些解决方案：第一种，修改Mysql数据库编码，改成utf-8，默认是latin1 （推荐）； 如图，找到mysql安装，点mysql实例配置  一直点next知道下面这个界面：记住，前面那个圈 一点要点。。下拉框选utf8继续next直到：写你', '2016-02-02 13:29:33', 193, 6, '<p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">有些学员经常遇到 项目jdbc获取数据库数据，中文乱码；</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><br/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">这里给出一些解决方案：</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><br/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><span style=\"color: rgb(255, 0, 0);\">第一种，修改Mysql数据库编码，改成utf-8，默认是latin1 （推荐）；</span></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><img alt=\"QQ鍥剧墖20160202132103.png\" src=\"/static/userImages/20160202/1454390480343030776.png\" title=\"1454390480343030776.png\"/> 如图，找到mysql安装，点mysql实例配置</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><br/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><img src=\"/static/userImages/20160202/1454390537171022264.jpg\" alt=\"1454390537171022264.jpg\"/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">&nbsp;一直点next知道下面这个界面：</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><img alt=\"QQ鍥剧墖20160202132310.png\" src=\"/static/userImages/20160202/1454390616812058607.png\" title=\"1454390616812058607.png\"/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">记住，前面那个圈 一点要点。。下拉框选utf8</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><br/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">继续next直到：</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><img alt=\"QQ鍥剧墖20160202132431.png\" src=\"/static/userImages/20160202/1454390692687028654.png\" title=\"1454390692687028654.png\"/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">写你原来的密码继续，然后继续Next:</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><img alt=\"QQ鍥剧墖20160202132517.png\" src=\"/static/userImages/20160202/1454390731515038389.png\" title=\"1454390731515038389.png\"/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">点击 执行</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><img alt=\"QQ鍥剧墖20160202132618.png\" src=\"/static/userImages/20160202/1454390793796097934.png\" title=\"1454390793796097934.png\"/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">这样就OK了；</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><br/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">这个执行完。记得要把原来导入的项目数据库删除，重新的导入下即可；<br/></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><br/><span style=\"color: rgb(255, 0, 0);\"></span></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\"><span style=\"color: rgb(255, 0, 0);\">第二种，修改jdbc请求url 指定编码 （不推荐）<br/></span></p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">在jdbc url后面 加上 ?useUnicode=true&amp;characterEncoding=UTF8 指定下编码；</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">假如是在xml配置文件里 要转义下 搞成 ?useUnicode=true&amp;amp;characterEncoding=UTF-8 ；</p><p style=\"margin: 5px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">比如在spring配置文件里：</p><pre class=\"brush:xml;toolbar:false\">&lt;!--&nbsp;配置数据源&nbsp;--&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;dataSource&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;url&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_blog?useUnicode=true&amp;amp;characterEncoding=UTF-8&quot;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;username&quot;&nbsp;value=&quot;root&quot;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;password&quot;&nbsp;value=&quot;123456&quot;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/bean&gt;</pre><p><br/></p><p>推荐第一种；</p><p><br/></p>', 2, 'mysql 乱码');
INSERT INTO `t_blog` VALUES (43, '解决Url带中文参数乱码问题', ' 这里我来介绍下如何配置Tomcat 来解决Url带中文参数乱码问题；首先打开Tomcat安装目录，以Tomcat7为例，其他版本基本一样；打开conf文件打开server.xml大概在70行左右的位置 我们加一个属性 URIEncoding=\"UTF-8\"搞成这样即可。。这个是发布项目的时候，配置方式。下面', '2016-01-22 13:38:39', 210, 2, '<p><img src=\"http://img.baidu.com/hi/jx2/j_0001.gif\"/> 这里我来介绍下如何配置Tomcat 来解决Url带中文参数乱码问题；</p><p><br/></p><p>首先打开Tomcat安装目录，以Tomcat7为例，其他版本基本一样；</p><p><img src=\"/static/userImages/20160202/1454391117593077429.jpg\" alt=\"1454391117593077429.jpg\"/></p><p><br/></p><p>打开conf文件</p><p><img src=\"/static/userImages/20160202/1454391166890014358.jpg\" alt=\"1454391166890014358.jpg\"/><br/></p><p><br/></p><p>打开server.xml</p><p><img src=\"/static/userImages/20160202/1454391299968024532.jpg\" alt=\"1454391299968024532.jpg\"/><br/></p><p><br/></p><p>大概在70行左右的位置 我们加一个属性 URIEncoding=&quot;UTF-8&quot;</p><p><br/></p><p><img src=\"/static/userImages/20160202/1454391361171014090.jpg\" alt=\"1454391361171014090.jpg\"/></p><p><br/></p><p>搞成这样即可。。这个是发布项目的时候，配置方式。</p><p><br/></p><p>下面介绍开发的时候，如何配置：</p><p>打开eclipse</p><p>找到server</p><p><img src=\"/static/userImages/20160202/1454391411687030232.jpg\" alt=\"1454391411687030232.jpg\"/><br/></p><p><br/></p><p>点开server.xml</p><p><img src=\"/static/userImages/20160202/1454391443968032571.jpg\" alt=\"1454391443968032571.jpg\"/><br/></p><p><br/></p><p>和刚才一样，加下 URIEncoding=&quot;UTF-8&quot; 这样就支持Url中文参数了；</p><p><br/></p><p>当然还有其他方法，比较麻烦。比如自己转码，过滤。这里就不介绍了。<br/></p>', 3, 'url中文参数');
INSERT INTO `t_blog` VALUES (44, '人生需要奋斗', '今天很残酷，明天更残酷，后天很美好，但绝对大部分是死在明天晚上，所以每个人不要轻言放弃。--马云', '2016-02-02 14:03:06', 254, 18, '<p>今天很残酷，明天更残酷，后天很美好，但绝对大部分是死在明天晚上，所以每个人不要轻言放弃。--马云</p><p><img alt=\"1-1510121339113S.jpg\" src=\"/static/userImages/20160202/1454392975421022042.jpg\" title=\"1454392975421022042.jpg\"/></p>', 5, NULL);
INSERT INTO `t_blog` VALUES (45, 'shiro介绍以及推荐视频教程', 'shiro是apache提供的强大而灵活的开源安全框架，它主要用来处理身份认证，授权，企业会话管理和加密。shiro功能：用户验证、用户执行访问权限控制、在任何环境下使用session API，如cs程序。可以使用多数据源如同时使用oracle、mysql。单点登录(sso)支持。remember me服务。', '2016-02-02 17:00:30', 365, 25, '<p>shiro是apache提供的强大而灵活的开源安全框架，它主要用来处理身份认证，授权，企业会话管理和加密。</p><p>shiro功能：用户验证、用户执行访问权限控制、在任何环境下使用session API，如cs程序。可以使用多数据源如同时使用oracle、mysql。单点登录(sso)支持。remember me服务。</p><p><br/></p><p>推荐视频教程 一头扎进shiro&nbsp;</p><p>课程目录：<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span><a href=\"http://www.java1234.com/zy032.html\" target=\"_blank\" title=\"http://www.java1234.com/zy032.html\">http://www.java1234.com/zy032.html</a><span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span></p><p>百度云打包下载： &nbsp;<a href=\"http://pan.baidu.com/s/1ntEifgt\" target=\"_blank\" title=\"http://pan.baidu.com/s/1ntEifgt\">http://pan.baidu.com/s/1ntEifgt</a></p>', 7, 'shiro java');
INSERT INTO `t_blog` VALUES (47, '什么是webservice?', '  webservice 有的人一看到这个，估计会认为这个是一种新技术，一种新框架。其实不是，严格的说，webservice是一种跨平台，跨语言的规范，用于不同平台，不同语言开发的应用之间的交互。  这里具体举个例子，比如在Windows Server服务器上有个C#.Net开发的应用A，在Linux上有个J', '2016-02-03 16:07:31', 304, 15, '<p>&nbsp; webservice 有的人一看到这个，估计会认为这个是一种新技术，一种新框架。<br/></p><p>其实不是，严格的说，webservice是一种跨平台，跨语言的规范，用于不同平台，不同语言开发的应用之间的交互。</p><p><br/></p><p>&nbsp; 这里具体举个例子，比如在Windows Server服务器上有个C#.Net开发的应用A，在Linux上有个Java语言开发的应用B，</p><p>B应用要调用A应用，或者是互相调用。用于查看对方的业务数据。</p><p>&nbsp; 再举个例子，天气预报接口。无数的应用需要获取天气预报信息；这些应用可能是各种平台，各种技术实现；而气象局的项目，估计也就一两种，要对外提供天气预报信息，这个时候，如何解决呢？</p><p><br/></p><p>&nbsp; webservice就是出于以上类似需求而定义出来的规范；</p><p>&nbsp;&nbsp;</p><p>&nbsp; 开发人员一般就是在具体平台开发webservice接口，以及调用webservice接口；每种开发语言都有自己的webservice实现框架。比如Java 就有&nbsp;Apache Axis1、Apache Axis2、Codehaus XFire、Apache CXF、Apache Wink、Jboss &nbsp;RESTEasyd等等...</p><p><br/></p><p><img src=\"/static/userImages/20160203/1454486847949023678.jpg\" title=\"1454486847949023678.jpg\" alt=\"20131203094415-1061627437.jpg\"/></p><p><br/></p><p><br/></p><p>&nbsp;&nbsp;</p>', 9, 'webservice java');
INSERT INTO `t_blog` VALUES (48, '百度云资源，是程序员们的发家致富一块肥肉', '  百度云在前两年的“云大战”中，最终获胜，当年各种云盘，相互厮杀，有技术方面的，有公关方面的原因，最终还是百度云大获全胜；  百度云经过几年的发展，逐渐成熟，性能稳定。开始的时候是不考虑盈利的，无广告。一直花钱投入，立志把这个云技术项目做好。时间证明了一切，百度云是一个优秀的，用户量最大的，资源最多，并且处', '2016-02-04 18:49:15', 889, 18, '<p>&nbsp; 百度云在前两年的“云大战”中，最终获胜，当年各种云盘，相互厮杀，有技术方面的，有公关方面的原因，最终还是百度云大获全胜；</p><p>&nbsp; 百度云经过几年的发展，逐渐成熟，性能稳定。开始的时候是不考虑盈利的，无广告。一直花钱投入，立志把这个云技术项目做好。时间证明了一切，百度云是一个优秀的，用户量最大的，资源最多，</p><p>并且处理违法信息的手段都是成熟的。</p><p>&nbsp; 大家看了标题也许有疑问，“百度云资源，是程序员们的发家致富一块肥肉” 根本原因是百度云拥有海量的用户分享的资源， 但为什么是程序员的肥肉呢。据本人观察，中国至少有500家网站吃到百度云这块肥肉，一种一家就是我，<a href=\"http://pan.java1234.com/\" target=\"_blank\" title=\"http://pan.java1234.com/\">http://pan.java1234.com/</a></p><p>我这个项目，主要是利用谷歌自定义搜索，来搜索用户需要的资源。日IP 2万左右，但是钱赚得不多。</p><p>&nbsp;下面我来谈谈如何利用百度云来赚钱，这里只针对程序员，因为只有程序员有技术来实现。说简单点，就是百度云的海量资源，程序员们可以看作是海量的页面，可以拿过来，搞成自己的资源页面。这样自己搞的站点，就拥有了海量的页面，只要seo搞得还行，一天搞个几万个流量，甚至几十万流量都没问题。然后挂google广告，百度联盟广告，我看到过类似网站，成功申请到谷歌广告，百度联盟广告的。</p><p>&nbsp;这块蛋糕，以后肯定会被越来越多的程序员看重，并且分享。但是我个人觉得，这块蛋糕非常大，大得我估计能养活10万个程序员。<img src=\"http://img.baidu.com/hi/jx2/j_0005.gif\"/> 当然有些人觉得我吹牛逼，其实我说的还是保守的值。</p><p>&nbsp;下面我来分析下，如何来搞这个项目 要用到哪些技术，传统的php ,asp.net,jsp 都可以来实现这项目。我自己也去看了人家的实现，核心的是采集技术，怎么个采集法呢，不是随便瞎搞的，一条比较好的方法是先去采集百度云分享达人的帐号，然后挨个的采集他们的分享资源。就是搞这个项目，说实话，要花不少时间，就是在采集资源这块。我估计有不少程序员是全职搞这个项目的，我上次看到几个，根据流量和广告。我估计他们一个月至少有2，3万。流量很大。采集到数据后，然后就是显示，这个再简单不过了。作为程序员，如果连这个都不会，那只能称技术员了。</p><p>&nbsp;&nbsp;</p><p>&nbsp; 好了，今天就把这个牛逼蛋糕介绍到这里，希望大家看到我这个文章，假如技术上满足条件，可以试着业余先搞搞。或许你从此屌炸天了。</p><p><br/></p><p><img src=\"/static/userImages/20160204/1454582940339078791.jpg\" title=\"1454582940339078791.jpg\" alt=\"QQ鎴浘20160204184853.jpg\"/></p><p><br/></p><p><br/></p>', 4, '百度云 赚钱');
INSERT INTO `t_blog` VALUES (49, '新的一年，祝愿大家幸福平安，事业有成', '新的一年，祝愿大伙猴年大吉。 看我博客的，大多数都是在奋斗的年轻人，希望大家在最能够吃苦的年纪，一定要多努力。20到30岁是人生学习专业知识，积累经验，积累人脉以及磨练自己的最佳时期。一定要把握好。当然包括我自己，作为一个成了家的男人，也要奋斗，让家人过好的生活。', '2016-02-09 20:12:21', 213, 10, '<p><img src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/><img src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/><img src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/><br/></p><p><br/></p><p>新的一年，祝愿大伙猴年大吉。</p><p><br/></p><p><img src=\"http://img.baidu.com/hi/jx2/j_0013.gif\"/> 看我博客的，大多数都是在奋斗的年轻人，希望大家在最能够吃苦的年纪，一定要多努力。20到30岁是人生学习专业知识，积累经验，积累人脉以及磨练自己的最佳时期。一定要把握好。</p><p><img alt=\"1104291174.png\" src=\"/static/userImages/20160209/1455019874408003267.png\" title=\"1455019874408003267.png\"/></p><p><br/></p><p>当然包括我自己，作为一个成了家的男人，也要奋斗，让家人过好的生活。<img src=\"http://img.baidu.com/hi/ldw/w_0003.gif\"/></p><p><br/></p>', 5, NULL);
INSERT INTO `t_blog` VALUES (50, '使用Jsoup解析出html中的img元素', 'jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。博客项目有个需求。展示博客列表的时候，显示一些博客里的图片，增强用户体验；这里的话，有两种方案，第一种 是在后台处理，把', '2016-02-14 12:52:43', 171, 6, '<p><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);\">jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</span></p><p><img src=\"/static/userImages/20160214/1455425736515085353.jpg\" title=\"1455425736515085353.jpg\" alt=\"QQ鎴浘20160214125257.jpg\"/></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);\"><br/></span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px; background-color: rgb(255, 255, 255);\">博客项目有个需求。展示博客列表的时候，显示一些博客里的图片，增强用户体验；</span></p><p>这里的话，有两种方案，第一种 是在后台处理，把解析好的图片存集合里，然后转发到页面，遍历显示；还有一种是把博客内容送到页面，用Jquery处理。</p><p>我考虑了下。还是在后台处理好比较好，因为项目本身用到了 cnd加速，所以在前端处理反而影响效率。</p><p>在后端处理，可以使用Jsoup，很方便；</p><p><br/></p><p>Jsoup主页：<a href=\"http://jsoup.org/\" target=\"_blank\" title=\"http://jsoup.org/\">http://jsoup.org/</a></p><p><br/></p><p>maven地址：</p><pre class=\"brush:xml;toolbar:false\">&lt;dependency&gt;\n		&lt;groupId&gt;org.jsoup&lt;/groupId&gt;\n		&lt;artifactId&gt;jsoup&lt;/artifactId&gt;\n		&lt;version&gt;1.8.3&lt;/version&gt;\n	&lt;/dependency&gt;</pre><p><br/></p><p><br/></p><p>这里给下关键代码：</p><pre class=\"brush:java;toolbar:false\">for(Blog&nbsp;blog:blogList){\n			List&lt;String&gt;&nbsp;imagesList=blog.getImagesList();\n			String&nbsp;blogInfo=blog.getContent();\n			Document&nbsp;doc=Jsoup.parse(blogInfo);\n			Elements&nbsp;jpgs=doc.select(&quot;img[src$=.jpg]&quot;);&nbsp;//　查找扩展名是jpg的图片\n			for(int&nbsp;i=0;i&lt;jpgs.size();i++){\n				Element&nbsp;jpg=jpgs.get(i);\n				imagesList.add(jpg.toString());\n				if(i==2){\n					break;\n				}\n			}\n		}</pre><p><br/></p><p>主要涉及到一些选择器。不难。大家可以参考下官方文档。或者百度很容易上手。</p><p><br/></p>', 10, 'jsoup java');
INSERT INTO `t_blog` VALUES (51, '使用CXF开发WebService服务器端接口', 'CXF作为java领域主流的WebService实现框架，Java程序员有必要掌握它。CXF主页：http://cxf.apache.org/简介：百度百科今天的话，主要是用CXF来开发下WebService服务器端接口，明天写下开发客户端接口；这里用Maven。首先建一个Maven的j2se项目；项目的jr', '2016-02-14 20:46:04', 198, 1, '<p><br/>CXF作为java领域主流的WebService实现框架，Java程序员有必要掌握它。</p><p><br/></p><p>CXF主页：<a href=\"http://cxf.apache.org/\" target=\"_blank\" title=\"http://cxf.apache.org/\">http://cxf.apache.org/</a></p><p><br/></p><p>简介：<a href=\"http://baike.baidu.com/link?url=DSx84NVH4yZmYVYOiyFVucRScx5i1rXy5VH6N8VgLygZwkybqL1RVAISqgmWXt-pycDsWVTfydkOowd1ysGxGq\" target=\"_blank\" title=\"http://baike.baidu.com/link?url=DSx84NVH4yZmYVYOiyFVucRScx5i1rXy5VH6N8VgLygZwkybqL1RVAISqgmWXt-pycDsWVTfydkOowd1ysGxGq\">百度百科</a></p><p><br/></p><p>今天的话，主要是用CXF来开发下WebService服务器端接口，明天写下开发客户端接口；</p><p><br/></p><p>这里用Maven。<br/></p><p><br/></p><p>首先建一个Maven的j2se项目；<br/></p><p><img src=\"/static/userImages/20160214/1455452546687063197.jpg\" title=\"1455452546687063197.jpg\" alt=\"QQ鎴浘20160214201912.jpg\"/></p><p><br/></p><p>项目的jre用1.7，因为1.7有webservice的默认实现。不要用1.5 不然下面你用我的代码会有问题，用1.5的话，还需要另外加jar包，这里为了大家省事，要换成1.7;</p><p><img src=\"/static/userImages/20160214/1455452618468053349.jpg\" title=\"1455452618468053349.jpg\" alt=\"QQ鎴浘20160214201936.jpg\"/></p><p><br/></p><p><br/></p><p>根据规范，我们先建一个接口类：HelloWorld</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\nimport&nbsp;javax.jws.WebService;\n\n@WebService\npublic&nbsp;interface&nbsp;HelloWorld&nbsp;{\n\n	public&nbsp;String&nbsp;say(String&nbsp;str);\n}</pre><p><br/></p><p>再建一个具体的实现类：HelloWorldImpl</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice.impl;\n\nimport&nbsp;javax.jws.WebService;\n\nimport&nbsp;com.java1234.webservice.HelloWorld;\n\n@WebService\npublic&nbsp;class&nbsp;HelloWorldImpl&nbsp;implements&nbsp;HelloWorld{\n\n	public&nbsp;String&nbsp;say(String&nbsp;str)&nbsp;{\n		return&nbsp;&quot;Hello&nbsp;&quot;+str;\n	}\n\n}</pre><p><br/></p><p>最后建一个发布服务的主类：Server<br/></p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\n\nimport&nbsp;javax.xml.ws.Endpoint;\n\nimport&nbsp;com.java1234.webservice.impl.HelloWorldImpl;\n\npublic&nbsp;class&nbsp;Server&nbsp;{\n\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\n		System.out.println(&quot;web&nbsp;service&nbsp;start&quot;);&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HelloWorld&nbsp;implementor&nbsp;=&nbsp;new&nbsp;HelloWorldImpl();&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;address&nbsp;=&nbsp;&quot;http://192.168.1.103/helloWorld&quot;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Endpoint.publish(address,&nbsp;implementor);&nbsp;&nbsp;//&nbsp;JDK实现\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;web&nbsp;service&nbsp;started&quot;);&nbsp;&nbsp;\n	}\n}</pre><p><br/></p><p>这里的Endpoint是Jdk自身实现的WebService。所以到这里我们不需要用到CXF的任何东西。</p><p>这里的address，写上自己的本机IP</p><p>我们运行下Server类：</p><p>运行效果如下：<br/></p><p><img src=\"/static/userImages/20160214/1455452954968056097.jpg\" title=\"1455452954968056097.jpg\" alt=\"QQ鎴浘20160214202633.jpg\"/></p><p><br/></p><p>我们在浏览器里访问：<a href=\"http://192.168.1.103/helloWorld?wsdl\" _src=\"http://192.168.1.103/helloWorld?wsdl\">http://192.168.1.103/helloWorld?wsdl</a> </p><p><br/></p><p>效果：<br/></p><p><img src=\"/static/userImages/20160214/1455453073062071044.jpg\" title=\"1455453073062071044.jpg\" alt=\"QQ鎴浘20160214202817.jpg\"/></p><p><br/></p><p>说明已经成功调用了webservice接口；</p><p><br/></p><p>这里的wsdl 是&nbsp;Web Services Description Language的缩写，是一个用来描述Web服务和说明如何与Web服务通信的XML语言。WSDL是Web Service的描述语言，用于描述Web Service的服务，接口绑定等，为用户提供详细的接口说明书。</p><p><br/></p><p>请求后得到的是一个xml规范文档。是一套规范，后面会具体介绍，任何语言平台技术都可以解析。</p><p><br/></p><p><br/></p><p><br/></p><p>下面我们介绍使用CXF来实现webservice接口：</p><p>我们先在pom.xml中加入：<br/></p><pre class=\"brush:xml;toolbar:false\">&lt;dependency&gt;\n		&lt;groupId&gt;org.apache.cxf&lt;/groupId&gt;\n		&lt;artifactId&gt;cxf-core&lt;/artifactId&gt;\n		&lt;version&gt;3.1.5&lt;/version&gt;\n	&lt;/dependency&gt;\n	\n	&lt;dependency&gt;\n		&lt;groupId&gt;org.apache.cxf&lt;/groupId&gt;\n		&lt;artifactId&gt;cxf-rt-frontend-jaxws&lt;/artifactId&gt;\n		&lt;version&gt;3.1.5&lt;/version&gt;\n	&lt;/dependency&gt;\n	\n	&lt;dependency&gt;\n		&lt;groupId&gt;org.apache.cxf&lt;/groupId&gt;\n		&lt;artifactId&gt;cxf-rt-transports-http-jetty&lt;/artifactId&gt;\n		&lt;version&gt;3.1.5&lt;/version&gt;\n	&lt;/dependency&gt;</pre><p><br/></p><p>这里要额外加入jetty，作为webservice发布的服务器。jetty是一个内嵌的web服务器；</p><p><br/></p><p><img src=\"/static/userImages/20160214/1455453479984038162.jpg\" title=\"1455453479984038162.jpg\" alt=\"QQ鎴浘20160214203514.jpg\"/></p><p><br/></p><p>我们把Server改下。换成CXF实现：<br/></p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\n\nimport&nbsp;org.apache.cxf.jaxws.JaxWsServerFactoryBean;\n\nimport&nbsp;com.java1234.webservice.impl.HelloWorldImpl;\n\npublic&nbsp;class&nbsp;Server&nbsp;{\n\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\n		System.out.println(&quot;web&nbsp;service&nbsp;start&quot;);&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HelloWorld&nbsp;implementor&nbsp;=&nbsp;new&nbsp;HelloWorldImpl();&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;address&nbsp;=&nbsp;&quot;http://192.168.1.103/helloWorld&quot;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Endpoint.publish(address,&nbsp;implementor);&nbsp;&nbsp;//&nbsp;JDK实现\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JaxWsServerFactoryBean&nbsp;factoryBean&nbsp;=&nbsp;new&nbsp;JaxWsServerFactoryBean();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factoryBean.setAddress(address);&nbsp;//&nbsp;设置暴露地址\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factoryBean.setServiceClass(HelloWorld.class);&nbsp;//&nbsp;接口类\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factoryBean.setServiceBean(implementor);&nbsp;//&nbsp;设置实现类\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factoryBean.create();		\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;web&nbsp;service&nbsp;started&quot;);&nbsp;&nbsp;\n	}\n}</pre><p><br/></p><p>运行效果和刚才一样，这里就不再重复；</p><p><br/></p><p>完整源码下载：<a href=\"http://pan.baidu.com/s/1jHwGLF4\" target=\"_blank\" title=\"http://pan.baidu.com/s/1jHwGLF4\">http://pan.baidu.com/s/1jHwGLF4</a> </p><p><br/></p>', 9, 'webservice cxf java');
INSERT INTO `t_blog` VALUES (52, '使用CXF开发WebService客户端', '前面一讲开发了webservice服务器端接口，今天的话，我们来开发webservice客户端，让大家来体验下过程；首先建一个Maven项目，项目名字，WS_Client；然后我们要用CXF给我们提供的工具wsdl2java 来根据请求的url生成客户端代码；wsdl2java工具在CXF开发包里；开发下载地', '2016-02-15 21:06:30', 226, 6, '<p>前面一讲开发了webservice服务器端接口，今天的话，我们来开发webservice客户端，让大家来体验下过程；</p><p><br/></p><p>首先建一个Maven项目，项目名字，WS_Client；</p><p><img src=\"/static/userImages/20160215/1455539511890048174.jpg\" alt=\"1455539511890048174.jpg\"/><br/></p><p><br/></p><p>然后我们要用CXF给我们提供的工具wsdl2java 来根据请求的url生成客户端代码；</p><p><br/></p><p>wsdl2java工具在CXF开发包里；</p><p>开发下载地址：<a title=\"http://cxf.apache.org/download.html\" target=\"_blank\" href=\"http://cxf.apache.org/download.html\">http://cxf.apache.org/download.html</a></p><p><img alt=\"QQ鎴浘20160215203213.jpg\" src=\"/static/userImages/20160215/1455539700734093102.jpg\" title=\"1455539700734093102.jpg\" width=\"667\" height=\"264\" style=\"width: 667px; height: 264px;\"/></p><p><br/></p><p>下载二进制包，然后解压到D盘 <br/></p><p><img alt=\"QQ鎴浘20160215203317.jpg\" src=\"/static/userImages/20160215/1455539761187019902.jpg\" title=\"1455539761187019902.jpg\"/></p><p><br/></p><p>这里我们看到了wsdl2java命令；当然要用的话，还得配置Path。我们打开环境变量配置，加入路径 D:\\apache-cxf-3.1.5\\bin&nbsp; 可能你的和我不一样；</p><p><img src=\"/static/userImages/20160215/1455539844625087079.jpg\" alt=\"1455539844625087079.jpg\"/><br/></p><p><br/></p><p>现在我们要干的事是在我们项目里生成我们需要的webservice客户端代码，</p><p>我们找到项目的本地路径，</p><p><img alt=\"QQ鎴浘20160215203622.jpg\" src=\"/static/userImages/20160215/1455539950421090821.jpg\" title=\"1455539950421090821.jpg\"/></p><p><br/></p><p>我的地址是：D:\\workspace\\WS_Client\\src\\main\\java 你们的可能和我不一样：</p><p><br/></p><p>然后我们进入dos，进入上面的本地硬盘地址，然后执行命令：wsdl2java&nbsp;<a href=\"http://192.168.1.103/helloWorld?wsdl\" _src=\"http://192.168.1.103/helloWorld?wsdl\">http://192.168.1.103/helloWorld?wsdl</a> </p><p><img src=\"/static/userImages/20160215/1455542517421041234.jpg\" title=\"1455542517421041234.jpg\" alt=\"QQ鎴浘20160215211824.jpg\"/></p><p><br/></p><p>这样就完成了代码的生成，我们刷新下工程：</p><p><img src=\"/static/userImages/20160215/1455542567125006252.jpg\" title=\"1455542567125006252.jpg\" alt=\"QQ鎴浘20160215212002.jpg\"/></p><p><br/></p><p>最关键的代码是HelloWorldService.java 我们下面写请求主类要用到；</p><p><br/></p><p><br/></p><p>我们下面写下主类 Client ，自己建下：</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\npublic&nbsp;class&nbsp;Client&nbsp;{\n\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\n		HelloWorldService&nbsp;service=new&nbsp;HelloWorldService();\n		HelloWorld&nbsp;helloWorld=service.getHelloWorldPort();\n		System.out.println(helloWorld.say(&quot;java1234_小锋&quot;));\n	}\n}</pre><p><br/></p><p>运行如下：</p><p><img src=\"/static/userImages/20160215/1455542695984058850.jpg\" title=\"1455542695984058850.jpg\" alt=\"QQ鎴浘20160215212217.jpg\"/></p><p><br/></p><p>说明我们成功调用了webservice服务器端的接口。</p><p><br/></p><p>完整代码：<a href=\"http://pan.baidu.com/s/1gebOAR5\" target=\"_blank\" title=\"http://pan.baidu.com/s/1gebOAR5\">http://pan.baidu.com/s/1gebOAR5</a></p>', 9, 'webservice cxf');
INSERT INTO `t_blog` VALUES (53, 'CXF处理JavaBean以及复合类型', '前面讲的是处理简单类型，今天这里来讲下CXF处理JavaBean以及复合类型，比如集合；这里实例是客户端传一个JavaBean，服务器端返回集合类型；在原来的项目实例基础上，我们先创建一个实体类User:package com.java1234.entity;/** * 用户实体类 * @author Adm', '2016-02-18 10:31:19', 121, 8, '<p>前面讲的是处理简单类型，今天这里来讲下CXF处理JavaBean以及复合类型，比如集合；</p><p><br/></p><p>这里实例是客户端传一个JavaBean，服务器端返回集合类型；</p><p><br/></p><p>在原来的项目实例基础上，我们先创建一个实体类User:<br/></p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.entity;\n\n/**\n&nbsp;*&nbsp;用户实体类\n&nbsp;*&nbsp;@author&nbsp;Administrator\n&nbsp;*\n&nbsp;*/\npublic&nbsp;class&nbsp;User&nbsp;{\n\n	private&nbsp;Integer&nbsp;id;&nbsp;//&nbsp;编号\n	private&nbsp;String&nbsp;userName;&nbsp;//&nbsp;用户名\n	private&nbsp;String&nbsp;password;&nbsp;//&nbsp;密码\n	\n	public&nbsp;Integer&nbsp;getId()&nbsp;{\n		return&nbsp;id;\n	}\n	public&nbsp;void&nbsp;setId(Integer&nbsp;id)&nbsp;{\n		this.id&nbsp;=&nbsp;id;\n	}\n	public&nbsp;String&nbsp;getUserName()&nbsp;{\n		return&nbsp;userName;\n	}\n	public&nbsp;void&nbsp;setUserName(String&nbsp;userName)&nbsp;{\n		this.userName&nbsp;=&nbsp;userName;\n	}\n	public&nbsp;String&nbsp;getPassword()&nbsp;{\n		return&nbsp;password;\n	}\n	public&nbsp;void&nbsp;setPassword(String&nbsp;password)&nbsp;{\n		this.password&nbsp;=&nbsp;password;\n	}\n	\n	\n}</pre><p><br/></p><p>再创建一个Role实体类：</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.entity;\n\n/**\n&nbsp;*&nbsp;角色实体\n&nbsp;*&nbsp;@author&nbsp;Administrator\n&nbsp;*\n&nbsp;*/\npublic&nbsp;class&nbsp;Role&nbsp;{\n\n	private&nbsp;Integer&nbsp;id;&nbsp;//&nbsp;编号\n	private&nbsp;String&nbsp;roleName;&nbsp;//&nbsp;角色名称\n	\n	\n	\n	public&nbsp;Role()&nbsp;{\n		super();\n		//&nbsp;TODO&nbsp;Auto-generated&nbsp;constructor&nbsp;stub\n	}\n	\n	\n	\n	public&nbsp;Role(Integer&nbsp;id,&nbsp;String&nbsp;roleName)&nbsp;{\n		super();\n		this.id&nbsp;=&nbsp;id;\n		this.roleName&nbsp;=&nbsp;roleName;\n	}\n\n\n\n	public&nbsp;Integer&nbsp;getId()&nbsp;{\n		return&nbsp;id;\n	}\n	public&nbsp;void&nbsp;setId(Integer&nbsp;id)&nbsp;{\n		this.id&nbsp;=&nbsp;id;\n	}\n	public&nbsp;String&nbsp;getRoleName()&nbsp;{\n		return&nbsp;roleName;\n	}\n	public&nbsp;void&nbsp;setRoleName(String&nbsp;roleName)&nbsp;{\n		this.roleName&nbsp;=&nbsp;roleName;\n	}\n	\n	\n}</pre><p><br/></p><p><br/></p><p>然后HelloWorld再加一个接口方法getRoleByUser，通过用户查找角色：<br/></p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\nimport&nbsp;java.util.List;\n\nimport&nbsp;javax.jws.WebService;\n\nimport&nbsp;com.java1234.entity.Role;\nimport&nbsp;com.java1234.entity.User;\n\n@WebService\npublic&nbsp;interface&nbsp;HelloWorld&nbsp;{\n\n	public&nbsp;String&nbsp;say(String&nbsp;str);\n	\n	public&nbsp;List&lt;Role&gt;&nbsp;getRoleByUser(User&nbsp;user);\n}</pre><p><br/></p><p><br/></p><p>然后HelloWorld接口实现类 HelloWorldImpl写下新增的方法的具体实现，我们这里写死，模拟下即可：<br/></p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice.impl;\n\nimport&nbsp;java.util.ArrayList;\nimport&nbsp;java.util.List;\n\nimport&nbsp;javax.jws.WebService;\n\nimport&nbsp;com.java1234.entity.Role;\nimport&nbsp;com.java1234.entity.User;\nimport&nbsp;com.java1234.webservice.HelloWorld;\n\n@WebService\npublic&nbsp;class&nbsp;HelloWorldImpl&nbsp;implements&nbsp;HelloWorld{\n\n	public&nbsp;String&nbsp;say(String&nbsp;str)&nbsp;{\n		return&nbsp;&quot;Hello&nbsp;&quot;+str;\n	}\n\n	public&nbsp;List&lt;Role&gt;&nbsp;getRoleByUser(User&nbsp;user)&nbsp;{\n		List&lt;Role&gt;&nbsp;roleList=new&nbsp;ArrayList&lt;Role&gt;();\n		//&nbsp;模拟&nbsp;直接写死\n		if(user!=null){\n			if(user.getUserName().equals(&quot;java1234&quot;)&nbsp;&amp;&amp;&nbsp;user.getPassword().equals(&quot;123456&quot;)){\n				roleList.add(new&nbsp;Role(1,&quot;技术总监&quot;));\n				roleList.add(new&nbsp;Role(2,&quot;架构师&quot;));\n			}else&nbsp;if(user.getUserName().equals(&quot;jack&quot;)&nbsp;&amp;&amp;&nbsp;user.getPassword().equals(&quot;123456&quot;)){\n				roleList.add(new&nbsp;Role(3,&quot;程序员&quot;));\n			}\n			return&nbsp;roleList;\n		}else{\n			return&nbsp;null;			\n		}\n		\n	}\n	\n	\n\n}</pre><p><br/></p><p>服务端其他地方不用动；<br/></p><p><br/></p><p>下面我们来处理下客户端，和前面讲的一样。我们用wsdl2java工具重新生成代码，这里就不再讲；</p><p><br/></p><p><img src=\"/static/userImages/20160218/1455762437448028677.jpg\" title=\"1455762437448028677.jpg\" alt=\"QQ鎴浘20160218103035.jpg\"/></p><p><br/></p><p>这里我看到，实体类，以及接口实现，代码都生成了。</p><p><br/></p><p>我们改下Client类：</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\nimport&nbsp;java.util.List;\n\npublic&nbsp;class&nbsp;Client&nbsp;{\n\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\n		HelloWorldService&nbsp;service=new&nbsp;HelloWorldService();\n		HelloWorld&nbsp;helloWorld=service.getHelloWorldPort();\n		//System.out.println(helloWorld.say(&quot;java1234&quot;));\n		User&nbsp;user=new&nbsp;User();\n		user.setUserName(&quot;jack&quot;);\n		user.setPassword(&quot;123456&quot;);\n		List&lt;Role&gt;&nbsp;roleList=helloWorld.getRoleByUser(user);\n		for(Role&nbsp;role:roleList){\n			System.out.println(role.getId()+&quot;,&quot;+role.getRoleName());\n		}\n	}\n}</pre><p><br/></p><p>运行截图：<br/></p><p><img src=\"/static/userImages/20160218/1455762521698070806.jpg\" title=\"1455762521698070806.jpg\" alt=\"QQ鎴浘20160218103159.jpg\"/></p><p><br/></p><p>完整代码：<a href=\"http://pan.baidu.com/s/1c1drMYO\" target=\"_blank\" title=\"http://pan.baidu.com/s/1c1drMYO\">http://pan.baidu.com/s/1c1drMYO</a></p><p><br/></p>', 9, 'webservice cxf');
INSERT INTO `t_blog` VALUES (54, 'webservice执行过程深入理解', '前面我们搞了1，2个DEMO，基本对webservice服务发布，调用 ，执行 有一定的了解。今天的话，我们再系统的梳理下webservice执行过程。首先我们在webservice服务器端开发webservice接口，然后发布webservice；然后我们通过一个Url调用webservice接口，比如发布', '2016-02-19 20:18:54', 108, 0, '<p>前面我们搞了1，2个DEMO，基本对webservice服务发布，调用 ，执行 有一定的了解。</p><p>今天的话，我们再系统的梳理下webservice执行过程。</p><p><br/></p><p>首先我们在webservice服务器端开发webservice接口，然后发布webservice；</p><p><br/></p><p>然后我们通过一个Url调用webservice接口，比如发布的时候 ，url是&nbsp;http://192.168.1.103/helloWorld</p><p><br/></p><p>那我们请求的url就是&nbsp;http://192.168.1.103/helloWorld?wsdl &nbsp;</p><p><br/></p><p>我们在浏览器里输入，运行如下：</p><p><img src=\"/static/userImages/20160219/1455883676261078945.jpg\" title=\"1455883676261078945.jpg\" alt=\"QQ鎴浘20160219201122.jpg\"/></p><p><br/></p><p>这一大串xml标记，其实就是wsdl （Web Services Description Language） 也就是Web Service描述语言，描述服务器端定义的webservice接口的相关信息，</p><p>当然我们不用花时间去学习这东西，毕竟这东西是一套规范，但是我们仔细观察，猜测，也能分析出一些猫腻来，这里wsdl:types就是定义了一些变量，wsdl:message相当于定义方法，</p><p>wsdl:portType相当与调用与返回，下面的话，就是一些操作。这东西不必要去研究细节，搞这东西会晕死的。有工具给我处理。我们角度要站得高。</p><p><br/></p><p>客户端通过这个url请求，获得wsdl规范的xml文档片段信息，然后这里又涉及到一个新的概念SOAP（Simple Object Access Protocol）即简单对象访问协议，我们通过这个协议，来实现客户端，服务器端消息交互，SOAP使用XML消息调用远程方法；当然交互的媒介就是xml，具体交互内容根据wsdl文档描述来。</p><p><br/></p><p>这个就是大体的一个webservie执行过程。<img src=\"http://img.baidu.com/hi/jx2/j_0013.gif\"/> 当然，我作为一个开发者，我觉得一般的应用，Ajax跨域调用，以JSON作为交互媒介也不错。当然也要根据具体情况来。比如有大量的对象，集合类型，webservice还是有他的强项的。</p><p><br/></p><p><br/></p><p><br/></p>', 9, 'webservice cxf');
INSERT INTO `t_blog` VALUES (55, '我的第一辆代步车-别克英朗', ' 2015年折腾了好几个月，把驾照搞定了。至于买车，东看看西看看。最终选了别克英朗作为第一辆入门代步车。开了几个月，体验不错。今天回丈母娘家，自己洗车。省了20块。 等这量车开报废了，变身老司机，准备入手奥迪A4L，或者奥迪A6L。', '2016-02-21 17:02:21', 93, 14, '<p><img src=\"http://img.baidu.com/hi/jx2/j_0013.gif\"/> 2015年折腾了好几个月，把驾照搞定了。至于买车，东看看西看看。最终选了别克英朗作为第一辆入门代步车。开了几个月，体验不错。</p><p>今天回丈母娘家，自己洗车。省了20块。</p><p><br/></p><p><img src=\"http://blog.java1234.com/static/userImages/20160221/1456045138917057522.jpg\" title=\"1456045138917057522.jpg\" style=\"white-space: normal;\"/></p><p><br/></p><p><img src=\"/static/userImages/20160221/1456045138542012090.jpg\" style=\"\" title=\"1456045138542012090.jpg\"/></p><p><img src=\"/static/userImages/20160221/1456045138542074202.jpg\" style=\"\" title=\"1456045138542074202.jpg\"/></p><p><img src=\"/static/userImages/20160221/1456045138542027541.jpg\" style=\"width: 598px; height: 905px;\" title=\"1456045138542027541.jpg\" width=\"598\" height=\"905\"/></p><p><br/></p><p><br/></p><p><img src=\"http://img.baidu.com/hi/jx2/j_0011.gif\"/> 等这量车开报废了，变身老司机，准备入手奥迪A4L，或者奥迪A6L。</p><p><br/></p><p><br/></p>', 5, '');
INSERT INTO `t_blog` VALUES (56, 'cxf处理一些Map等复杂类型', '前面讲的一些都是简单类型,cxf都支持。但是有些复杂类型，cxf是不支持，比如常用的Map类型；下面我们在前面的实例基础上在加一个方法，比如我们现在有个需求，获取所有用用户以及对应的每个用户所有角色信息；服务器端：HelloWorld接口加方法：/**	 * 获取所有用户以及对应的角色	 * @return	', '2016-02-22 17:46:30', 23, 1, '<p>前面讲的一些都是简单类型,cxf都支持。但是有些复杂类型，cxf是不支持，比如常用的Map类型；<br/></p><p><br/></p><p>下面我们在前面的实例基础上在加一个方法，比如我们现在有个需求，获取所有用用户以及对应的每个用户所有角色信息；</p><p><br/></p><p>服务器端：<br/></p><p><br/></p><p>HelloWorld接口加方法：</p><pre class=\"brush:java;toolbar:false\">/**\n	&nbsp;*&nbsp;获取所有用户以及对应的角色\n	&nbsp;*&nbsp;@return\n	&nbsp;*/\n	public&nbsp;Map&lt;String,List&lt;Role&gt;&gt;&nbsp;getRoles();</pre><p><br/></p><p>HelloWorldImpl实现类加方法实现：<br/></p><pre class=\"brush:java;toolbar:false\">public&nbsp;Map&lt;String,&nbsp;List&lt;Role&gt;&gt;&nbsp;getRoles()&nbsp;{\n		Map&lt;String,List&lt;Role&gt;&gt;&nbsp;map=new&nbsp;HashMap&lt;String,List&lt;Role&gt;&gt;();\n		List&lt;Role&gt;&nbsp;roleList1=new&nbsp;ArrayList&lt;Role&gt;();\n		roleList1.add(new&nbsp;Role(1,&quot;技术总监&quot;));\n		roleList1.add(new&nbsp;Role(2,&quot;架构师&quot;));\n		map.put(&quot;java1234&quot;,&nbsp;roleList1);\n		List&lt;Role&gt;&nbsp;roleList2=new&nbsp;ArrayList&lt;Role&gt;();\n		roleList2.add(new&nbsp;Role(1,&quot;程序员&quot;));\n		map.put(&quot;jack&quot;,&nbsp;roleList2);\n		return&nbsp;map;\n	}</pre><p><br/></p><p>然后我们启动Server类：发现报错：</p><p><img src=\"/static/userImages/20160222/1456134575421042758.jpg\" title=\"1456134575421042758.jpg\" alt=\"QQ鎴浘20160222175231.jpg\"/></p><p>这个报错信息说，不支持该类型；</p><p><br/></p><p>这里我们有好几种解决方案，这里我们用最常用的一种，使用适配器，把cxf不能接受的类型通过适配器，转能接受的类型。</p><p><br/></p><p>我们使用@XmlJavaTypeAdapter注解，加在接口定义上，完整接口代码如下：</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\nimport&nbsp;java.util.List;\nimport&nbsp;java.util.Map;\n\nimport&nbsp;javax.jws.WebService;\nimport&nbsp;javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n\nimport&nbsp;com.java1234.adapter.MapAdapter;\nimport&nbsp;com.java1234.entity.Role;\nimport&nbsp;com.java1234.entity.User;\n\n@WebService\npublic&nbsp;interface&nbsp;HelloWorld&nbsp;{\n\n	public&nbsp;String&nbsp;say(String&nbsp;str);\n	\n	public&nbsp;List&lt;Role&gt;&nbsp;getRoleByUser(User&nbsp;user);\n	\n	/**\n	&nbsp;*&nbsp;获取所有用户以及对应的角色\n	&nbsp;*&nbsp;@return\n	&nbsp;*/\n	@XmlJavaTypeAdapter(MapAdapter.class)\n	public&nbsp;Map&lt;String,List&lt;Role&gt;&gt;&nbsp;getRoles();\n}</pre><p><br/></p><p>这里参数需要一个实现了XmlAdapter类的适配器类；</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.adapter;\n\nimport&nbsp;java.util.HashMap;\nimport&nbsp;java.util.List;\nimport&nbsp;java.util.Map;\n\nimport&nbsp;javax.xml.bind.annotation.adapters.XmlAdapter;\n\nimport&nbsp;com.java1234.entity.Role;\n\n/**\n&nbsp;*&nbsp;Map适配器\n&nbsp;*&nbsp;@author&nbsp;Administrator\n&nbsp;*\n&nbsp;*/\npublic&nbsp;class&nbsp;MapAdapter&nbsp;extends&nbsp;XmlAdapter&lt;MyRole[],&nbsp;Map&lt;String,List&lt;Role&gt;&gt;&gt;{\n\n	/**\n	&nbsp;*&nbsp;适配转换&nbsp;&nbsp;MyRole[]&nbsp;-&gt;&nbsp;Map&lt;String,&nbsp;List&lt;Role&gt;&gt;\n	&nbsp;*/\n	@Override\n	public&nbsp;Map&lt;String,&nbsp;List&lt;Role&gt;&gt;&nbsp;unmarshal(MyRole[]&nbsp;v)&nbsp;throws&nbsp;Exception&nbsp;{\n		Map&lt;String,&nbsp;List&lt;Role&gt;&gt;&nbsp;map=new&nbsp;HashMap&lt;String,List&lt;Role&gt;&gt;();\n		for(int&nbsp;i=0;i&lt;v.length;i++){\n			MyRole&nbsp;r=v[i];\n			map.put(r.getKey(),&nbsp;r.getValue());\n		}\n		return&nbsp;map;\n	}\n\n	/**\n	&nbsp;*&nbsp;适配转换&nbsp;&nbsp;Map&lt;String,&nbsp;List&lt;Role&gt;&gt;&nbsp;-&gt;&nbsp;MyRole[]\n	&nbsp;*/\n	@Override\n	public&nbsp;MyRole[]&nbsp;marshal(Map&lt;String,&nbsp;List&lt;Role&gt;&gt;&nbsp;v)&nbsp;throws&nbsp;Exception&nbsp;{\n		MyRole[]&nbsp;roles=new&nbsp;MyRole[v.size()];\n		int&nbsp;i=0;\n		for(String&nbsp;key:v.keySet()){\n			roles[i]=new&nbsp;MyRole();\n			roles[i].setKey(key);\n			roles[i].setValue(v.get(key));\n			i++;\n		}\n		return&nbsp;roles;\n	}\n\n	\n	\n\n}</pre><p>这里的话XmlAdapter要加两个参数，XmlAdapter&lt;ValueType,BoundType&gt;&nbsp;</p><p>ValueType是cxf能接收的类型，这里我用了数组；</p><p>BoundType是cxf不能接受的类型，也就是我例子里的需求的Map类型；</p><p><br/></p><p>这里大家会看到，还有一个MyRole自定义类型，key:value。我们搞成两个属性，具体实现如下：<br/></p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.adapter;\n\nimport&nbsp;java.util.List;\n\nimport&nbsp;com.java1234.entity.Role;\n\n/**\n&nbsp;*&nbsp;自定义实体&nbsp;cxf能接受\n&nbsp;*&nbsp;@author&nbsp;Administrator\n&nbsp;*\n&nbsp;*/\npublic&nbsp;class&nbsp;MyRole&nbsp;{\n\n	private&nbsp;String&nbsp;key;\n	private&nbsp;List&lt;Role&gt;&nbsp;value;\n	\n	public&nbsp;String&nbsp;getKey()&nbsp;{\n		return&nbsp;key;\n	}\n	public&nbsp;void&nbsp;setKey(String&nbsp;key)&nbsp;{\n		this.key&nbsp;=&nbsp;key;\n	}\n	public&nbsp;List&lt;Role&gt;&nbsp;getValue()&nbsp;{\n		return&nbsp;value;\n	}\n	public&nbsp;void&nbsp;setValue(List&lt;Role&gt;&nbsp;value)&nbsp;{\n		this.value&nbsp;=&nbsp;value;\n	}\n	\n	\n}</pre><p><br/></p><p>OK 这样就行了。我们运行Server类，发布webservice接口：</p><p><img src=\"/static/userImages/20160222/1456134226937065109.jpg\" title=\"1456134226937065109.jpg\" alt=\"QQ鎴浘20160222174638.jpg\"/></p><p><br/></p><p><br/></p><p>然后就到了webservice客户端，我们用wsdl2java工具生成下最新代码，具体过程前面讲过，这里不重复讲：</p><p>生成代码如下：</p><p><img src=\"/static/userImages/20160222/1456134312484067804.jpg\" title=\"1456134312484067804.jpg\" alt=\"QQ鎴浘20160222174813.jpg\"/></p><p><br/></p><p>我们修改下Client类：</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.java1234.webservice;\n\nimport&nbsp;java.util.List;\n\npublic&nbsp;class&nbsp;Client&nbsp;{\n\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\n		HelloWorldService&nbsp;service=new&nbsp;HelloWorldService();\n		HelloWorld&nbsp;helloWorld=service.getHelloWorldPort();\n		//System.out.println(helloWorld.say(&quot;java1234&quot;));\n		/*User&nbsp;user=new&nbsp;User();\n		user.setUserName(&quot;jack&quot;);\n		user.setPassword(&quot;123456&quot;);\n		List&lt;Role&gt;&nbsp;roleList=helloWorld.getRoleByUser(user);\n		for(Role&nbsp;role:roleList){\n			System.out.println(role.getId()+&quot;,&quot;+role.getRoleName());\n		}*/\n		MyRoleArray&nbsp;array=helloWorld.getRoles();\n		List&lt;MyRole&gt;&nbsp;roleList=array.item;\n		for(int&nbsp;i=0;i&lt;roleList.size();i++){\n			MyRole&nbsp;my=roleList.get(i);\n			System.out.print(my.key+&quot;:&quot;);\n			for(Role&nbsp;r:my.value){\n				System.out.print(r.getId()+&quot;,&quot;+r.getRoleName()+&quot;&nbsp;&quot;);\n			}\n			System.out.println();\n		}\n	}\n}</pre><p><br/></p><p>运行下:</p><p><img src=\"/static/userImages/20160222/1456134352140052359.jpg\" title=\"1456134352140052359.jpg\" alt=\"QQ鎴浘20160222174853.jpg\"/></p><p><br/></p><p>OK,这样就实现了复杂类型的调用；</p><p><br/></p><p>完整代码：<a href=\"http://pan.baidu.com/s/1kTUseOZ\" target=\"_blank\" title=\"http://pan.baidu.com/s/1kTUseOZ\">http://pan.baidu.com/s/1kTUseOZ</a></p>', 9, 'webservice cxf');
INSERT INTO `t_blog` VALUES (57, 'xxx', 'xx内容', '2016-03-27 10:33:18', 6, 0, '<p>xx内容<br/></p>', 1, '');
INSERT INTO `t_blog` VALUES (58, 'xxx标题测试', 'xxxx内容测试2。。——以下内容摘自《jBPM4工作流应用开发指南》第20章 “中国特色工作流的jBPM实现”： 目前，中国内地对于工作流管理系统的\n应用主要还是集中于“人工流程”，也就是以人工任务密集型的工作流应用为主。主要原因在于国内的信息化系统建设还远不及欧美发达国家成熟，系统多是以新建\n和推倒重来为', '2016-03-27 10:35:36', 6, 0, '<p>xxxx内容测试2。。——以下内容摘自《jBPM4工作流应用开发指南》第20章 “中国特色工作流的jBPM实现”： 目前，中国内地对于<a target=\"_blank\" href=\"http://baike.baidu.com/view/15627.htm\">工作流管理系统</a>的\n应用主要还是集中于“人工流程”，也就是以人工任务密集型的工作流应用为主。主要原因在于国内的信息化系统建设还远不及欧美发达国家成熟，系统多是以新建\n和推倒重来为主，很少有经过长期稳定运行的“沉淀”系统，因此工作流管理系统中用于应用集成的相关自动活动功能就很少能得到施展，工作流管理系统大部分的\n应用还是集中在需要人工干预的“任务”上。这也可以解释为何在欧美国家大行其道的EAI（<a target=\"_blank\" href=\"http://baike.baidu.com/view/3043408.htm\">企业应用集成</a>）\n产品在国内市场并不普及的原因。 …… \n同时从jBPM项目本身来说，其作为一款基于西方业务流程管理思想设计的工作流框架，更多的是关注“如何辅助开发者更容易的让流程运行完成”，而不是关注\n“记录流程运行的历史和轨迹”。 \n因此，jBPM项目从设计上就没有考虑“回退”、“取回”、“会签”、“委派”等业务场景。这也是因为东西方文化的差异之所在：例如回退，西方人认为“往\n回流转的情况肯定也是一种业务流程规则的定义，那么肯定可以通过分支或条件流转的设计来解决”，而国内则常常把回退作为一个“人性化管理和处理的潜在规\n则”来看待，并且认为这是一个合理的需求。 \n本节的目的就是：提出这些具有中国特色的（当然这并不是中国所特有的）业务流程问题，在jBPM4的架构基础上分析解决这些问题的思路，并给出一种解决方\n案供参考。</p><p><br/></p><p><br/></p><p><img src=\"/static/userImages/20160327/1459046125580050132.jpg\" alt=\"1459046125580050132.jpg\"/></p>', 2, '关键字1  关键字2');
INSERT INTO `t_blog` VALUES (59, '标题测试', '内容测试。。。发大水', '2016-03-31 14:03:41', 3, 0, '<p>内容测试。。。发大水</p>', 7, '');
INSERT INTO `t_blog` VALUES (60, '测试标题2', '多少大师法ssss', '2016-03-31 14:06:40', 4, 0, '<p>多少大师法ssss</p>', 3, '');
INSERT INTO `t_blog` VALUES (61, '测试标题3', '测试内容3', '2016-03-31 14:08:06', 1, 0, '<p>测试内容3</p>', 10, '');
INSERT INTO `t_blog` VALUES (62, 'xxx', 'fds', '2016-03-31 14:09:24', 14, 0, '<p>fds</p>', 2, '');
INSERT INTO `t_blog` VALUES (66, 'java4', 'fdas javas ', '2016-04-10 09:22:20', 2, 0, '<p>fdas javas&nbsp;</p>', 3, '');
INSERT INTO `t_blog` VALUES (67, 'java6', 'da java', '2016-04-10 09:22:30', 3, 0, '<p>da java</p>', 3, '');
INSERT INTO `t_blog` VALUES (68, '测试新的修改博客2', '修改博客测试2', '2016-04-22 10:29:22', 28, 4, '<p>修改博客测试2</p>', 5, '测试2');
INSERT INTO `t_blog` VALUES (71, 'java基础', '少时诵诗书', '2019-06-16 04:46:08', 2, 0, '<p>少时诵诗书</p>', 1, '');
INSERT INTO `t_blog` VALUES (72, 'java基础sss', 'sss', '2019-06-16 04:48:23', 2, 0, '<p>sss<br/></p>', 1, '');
INSERT INTO `t_blog` VALUES (73, 'www', 'mysql', '2019-06-16 04:50:28', 5, 0, '<p>mysql</p>', 2, 'mysql');
INSERT INTO `t_blog` VALUES (74, 'www', 'www', '2019-06-16 04:51:20', 6, 0, '<p>www</p>', 1, '');
INSERT INTO `t_blog` VALUES (76, 'lucene测试', '呜呜呜呜', '2019-06-16 05:31:59', 3, 0, '<p>呜呜呜呜</p>', 1, '测试');
INSERT INTO `t_blog` VALUES (77, 'lucene教程', 'lucene测试，lucene教程学习', '2019-06-16 05:33:43', 8, 0, '<p>lucene测试，lucene教程学习</p>', 1, '');
INSERT INTO `t_blog` VALUES (78, 'lucene全文检索教程系列学习', 'lucene全文检索教程系列学习', '2019-06-16 07:01:21', 8, 0, '<p>lucene全文检索教程系列学习</p>', 1, '');
INSERT INTO `t_blog` VALUES (79, 'lucene和solr', 'lucene和solr', '2019-06-16 13:36:04', 12, 0, '<p>lucene和solr</p>', 1, 'solr');
INSERT INTO `t_blog` VALUES (80, 'lucene', '<p>lucene</p>', '2019-06-16 14:17:14', 84, 0, '<p>&lt;p&gt;lucene&lt;/p&gt;</p>', 1, '');
INSERT INTO `t_blog` VALUES (81, 'Java和lucene教程学习视频', 'Java和lucene教程学习视频', '2019-06-17 05:23:08', 9, 0, '<p>Java和lucene教程学习视频</p>', 1, '');
INSERT INTO `t_blog` VALUES (82, 'Java EE企业级开发', 'Java EE企业级开发', '2019-06-17 05:23:28', 11, 0, '<p>Java EE企业级开发</p>', 1, '');
INSERT INTO `t_blog` VALUES (83, 'lucene2', 'lucene', '2019-06-17 05:57:05', 129, 0, '<p>lucene</p>', 1, '');
INSERT INTO `t_blog` VALUES (84, 'springboot测试', '测试学习博客项目系统学习', '2019-06-23 11:10:21', 8, 0, '<p>测试</p><p>学习</p><p>博客项目</p><p>系统学习</p>', 1, '框架');
INSERT INTO `t_blog` VALUES (85, '框架学习测试哈哈', '框架学习测试哈哈', '2019-06-23 11:13:47', 8, 0, '<p>框架学习测试哈哈</p>', 4, '框架');
INSERT INTO `t_blog` VALUES (86, '测试写博客是否成功', '测试写博客是否成功测试学习博客系统个人博客', '2019-06-24 03:22:19', 6, 0, '<p>测试写博客是否成功</p><p>测试学习</p><p>博客系统</p><p>个人博客</p>', 1, '测试');
INSERT INTO `t_blog` VALUES (87, 'spring boot 全家桶', 'springboot框架，习惯优于配置。spring全家桶spring bootspring cloud', '2019-06-25 03:03:11', 20, 0, '<p>springboot框架，习惯优于配置。</p><p>spring全家桶</p><p>spring boot</p><p>spring cloud</p>', 1, 'springboot 框架 spring 全家桶');
INSERT INTO `t_blog` VALUES (91, '测试更新博客信息', '测试更新博客信息', '2019-06-27 03:58:29', 27, 0, '<p>测试更新博客信息</p>', 1, '更新  测试');
INSERT INTO `t_blog` VALUES (92, 'Hello World', '@Controllerpublic static void main(){    System.out.println(\"Hello World\");}', '2020-04-13 20:37:00', 1, 0, '<p><img src=\"http://img.baidu.com/hi/jx2/j_0001.gif\"/></p><p style=\"text-align:center\"></p><pre class=\"brush:java;toolbar:false\">@Controller\npublic&nbsp;static&nbsp;void&nbsp;main(){\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;Hello&nbsp;World&quot;);\n}</pre><p><br/></p><p><br/></p>', 1, 'java');
INSERT INTO `t_blog` VALUES (93, '123', '123', '2020-04-14 15:00:42', 0, 0, '<p>123<br/></p>', 1, '123 java');
INSERT INTO `t_blog` VALUES (94, '123', '123', '2020-04-14 15:01:18', 0, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (95, '123', '123', '2020-04-14 15:01:20', 1, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (96, '123', '123', '2020-04-14 15:13:33', 0, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (97, '123', '123', '2020-04-14 15:13:37', 0, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (98, '123', '123', '2020-04-14 15:22:20', 0, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (99, '123', '123', '2020-04-14 15:32:48', 0, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (100, '123', '123', '2020-04-14 15:32:51', 0, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (101, '123', '123', '2020-04-14 15:45:20', 0, 0, '<p>123<br/></p>', 1, '123');
INSERT INTO `t_blog` VALUES (102, 'Test', 'Test', '2020-04-14 16:16:23', 0, 0, '<p>Test<br/></p>', 12, 'Test');
INSERT INTO `t_blog` VALUES (103, 'Java大魔王', 'javapublic static void main(){    System.out.println(\"Hello World\");}', '2020-04-25 11:43:23', 1, 0, '<pre class=\"brush:java;toolbar:false\">java\npublic&nbsp;static&nbsp;void&nbsp;main(){\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;Hello&nbsp;World&quot;);\n}</pre><p style=\"margin-bottom: 5px; line-height: normal; text-align: center;\"><span style=\"border: 1px solid rgb(0, 0, 0);\"></span><br/></p>', 1, 'java sql');
COMMIT;

-- ----------------------------
-- Table structure for t_blogger
-- ----------------------------
DROP TABLE IF EXISTS `t_blogger`;
CREATE TABLE `t_blogger` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '博主编号',
  `userName` varchar(50) DEFAULT NULL COMMENT '用户名',
  `password` varchar(200) DEFAULT NULL COMMENT '密码',
  `profile` text COMMENT '个人简介',
  `nickName` varchar(50) DEFAULT NULL COMMENT '昵称',
  `sign` varchar(100) DEFAULT NULL COMMENT '座右铭',
  `imageName` varchar(100) DEFAULT NULL COMMENT '博主头像',
  `email` varchar(255) DEFAULT NULL COMMENT '注册邮箱 也是登录账号',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blogger
-- ----------------------------
BEGIN;
INSERT INTO `t_blogger` VALUES (1, 'shiyan', '123', 'ssss', '誓言', '座右铭', 'ddd.jpeg', '123@qq.com');
INSERT INTO `t_blogger` VALUES (2, '誓言', '123456', NULL, NULL, NULL, NULL, 'shiyana@126.com');
INSERT INTO `t_blogger` VALUES (4, '誓言', '123', NULL, '誓言', NULL, NULL, '441162079@qq.com');
INSERT INTO `t_blogger` VALUES (5, '誓言', '123', NULL, '誓言', NULL, NULL, '441162079@qq.com');
INSERT INTO `t_blogger` VALUES (6, '誓言', '123', NULL, '誓言', NULL, NULL, '441162079@qq.com');
INSERT INTO `t_blogger` VALUES (7, '誓言', '123', NULL, '誓言', NULL, NULL, '441162079@qq.com');
INSERT INTO `t_blogger` VALUES (8, '誓言', '123', NULL, '誓言', NULL, NULL, '441162079@qq.com');
INSERT INTO `t_blogger` VALUES (9, 'shiyan123', '123', NULL, 'shiyan123', NULL, NULL, '441162079@qq.com');
INSERT INTO `t_blogger` VALUES (10, 'shiyan', '123', NULL, 'shiyan', NULL, NULL, 'shiyana@126.com');
INSERT INTO `t_blogger` VALUES (11, 'kazu', '123', NULL, 'kazu', NULL, NULL, 'shiyana@126.com');
INSERT INTO `t_blogger` VALUES (12, 'kazu', '123', NULL, 'kazu', NULL, NULL, 'shiyana@126.com');
COMMIT;

-- ----------------------------
-- Table structure for t_blogtype
-- ----------------------------
DROP TABLE IF EXISTS `t_blogtype`;
CREATE TABLE `t_blogtype` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '博客分类编号',
  `typeName` varchar(30) DEFAULT NULL COMMENT '博客分类名称',
  `orderNo` int DEFAULT NULL COMMENT '博客优先级排序',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blogtype
-- ----------------------------
BEGIN;
INSERT INTO `t_blogtype` VALUES (1, 'Java核心基础', 1);
INSERT INTO `t_blogtype` VALUES (2, 'Mysql', 2);
INSERT INTO `t_blogtype` VALUES (3, 'Tomcat', 3);
INSERT INTO `t_blogtype` VALUES (4, 'IT之路', 6);
INSERT INTO `t_blogtype` VALUES (5, '随心生活', 7);
INSERT INTO `t_blogtype` VALUES (7, 'shiro', 4);
INSERT INTO `t_blogtype` VALUES (9, 'webservice', 5);
INSERT INTO `t_blogtype` VALUES (10, 'jsoup', 4);
INSERT INTO `t_blogtype` VALUES (11, 'wsss', 5);
INSERT INTO `t_blogtype` VALUES (12, '框架', NULL);
INSERT INTO `t_blogtype` VALUES (13, '集合', NULL);
COMMIT;

-- ----------------------------
-- Table structure for t_comment
-- ----------------------------
DROP TABLE IF EXISTS `t_comment`;
CREATE TABLE `t_comment` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '评论编号',
  `userIp` varchar(50) DEFAULT NULL COMMENT '用户IP地址',
  `blogId` int DEFAULT NULL COMMENT '所属博客id',
  `content` varchar(1000) DEFAULT NULL COMMENT '评论内容',
  `commentDate` datetime DEFAULT NULL COMMENT '评论时间',
  `state` int DEFAULT NULL COMMENT '审核状态1：待审核 2：已审核',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_comment
-- ----------------------------
BEGIN;
INSERT INTO `t_comment` VALUES (2, '0.1.1.2', 56, '搜索11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (3, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (4, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (5, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (6, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (7, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (8, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (9, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (10, '0.1.1.2', 56, '11', '2016-03-10 12:48:00', 1);
INSERT INTO `t_comment` VALUES (12, '192.168.1.1', 56, '呵呵', '2016-03-17 14:20:19', 1);
INSERT INTO `t_comment` VALUES (13, '0:0:0:0:0:0:0:1', 80, 'fda是', '2016-05-08 08:49:03', 2);
INSERT INTO `t_comment` VALUES (14, '192.168.1.1', 80, '呵呵', '2016-05-09 15:19:23', 2);
INSERT INTO `t_comment` VALUES (15, '192.168.1.1', 83, '呵呵', '2016-05-09 15:19:36', 1);
INSERT INTO `t_comment` VALUES (16, '192.168.1.1', 83, '搜索', '2016-05-09 15:21:17', 1);
INSERT INTO `t_comment` VALUES (17, NULL, NULL, 'ererer', NULL, NULL);
INSERT INTO `t_comment` VALUES (18, '10.1.1.150', NULL, 'erer', '2019-06-19 06:32:56', 1);
INSERT INTO `t_comment` VALUES (19, '10.1.1.150', 83, 'fggfg', '2019-06-19 06:33:43', 1);
INSERT INTO `t_comment` VALUES (20, '10.1.1.150', 83, 'rrrr', '2019-06-19 06:35:42', 1);
INSERT INTO `t_comment` VALUES (21, '192.167.9.134', 80, 'sdsfsdf', '2019-06-21 03:11:46', 2);
INSERT INTO `t_comment` VALUES (22, '192.167.9.134', 80, '测试', '2019-06-21 03:18:05', 1);
INSERT INTO `t_comment` VALUES (23, '192.167.9.134', 86, '55555', '2019-06-25 01:45:18', 1);
INSERT INTO `t_comment` VALUES (24, '192.167.9.134', 86, '8888', '2019-06-25 01:45:36', 1);
INSERT INTO `t_comment` VALUES (25, '192.167.9.111', 87, 'xx', '2019-10-11 06:13:07', 1);
INSERT INTO `t_comment` VALUES (26, '192.192.1.3', 85, '123', '2020-04-13 07:16:53', 1);
INSERT INTO `t_comment` VALUES (27, '192.192.1.3', 85, '1', '2020-04-13 07:18:13', 1);
INSERT INTO `t_comment` VALUES (28, '192.192.1.3', 85, '1', '2020-04-13 07:18:18', 1);
INSERT INTO `t_comment` VALUES (29, '192.192.1.3', 85, '1', '2020-04-13 07:18:17', 1);
INSERT INTO `t_comment` VALUES (30, '192.192.1.3', 91, '123', '2020-04-13 16:39:05', 1);
INSERT INTO `t_comment` VALUES (31, '192.192.1.3', 92, '你好啊，我是一个努力变强的男人，很高兴遇见你！', '2020-04-13 20:38:19', 1);
INSERT INTO `t_comment` VALUES (32, '192.192.1.2', 55, '哈哈', '2020-04-20 20:22:19', 1);
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
